## Format
# button_name:
# - topic: topic_name1 from rosbag (name of pandas dataframe)
#   fields:    #Fields from a ros topic, corresponds to columns in the dataframe.  null indicates plot all fields
#   - field1
#   - field2
time_series_buttons:
  heading:
  - topic: heading
    fields: null
  - topic: target_heading
    fields: null

  pitch:
  - topic: pitch
    fields: null
  - topic: target_pitch
    fields: null

  depth:
  - topic: depth
    fields: null
  - topic: target_depth
    fields: null

  roll:
  - topic: roll
    fields: null

  rudder_cmd:
  - topic: rudder_cmd
    fields: null

  elevator_cmd:
  - topic: elevator_cmd
    fields: null

  dvl_odom:
  - topic: dvl_odom
    fields:
    - velocity_x
    - velocity_y
    - velocity_z

  'imu_roll':
  - topic: imu_data
  # atan2(2(wx + yz), 1 - 2(x^2 + y^2))
    pre_process_string: 
    - 'phi = arctan2(2*(orientation_quat_y * orientation_quat_z + orientation_quat_x * orientation_quat_w), 1 - 2*(orientation_quat_x**2 + orientation_quat_y**2)) - @pi'
    - 'roll = 180/@pi * @wrapToPi(phi)'
    fields: 
    - roll

  'imu_pitch':
  - topic: imu_data
  # asin(2(wy - zx))
    pre_process_string: 'pitch = 180 / @pi * arcsin(2*(orientation_quat_w * orientation_quat_y - orientation_quat_z * orientation_quat_x))'
    fields: 
    - pitch

  'imu_yaw':
  - topic: imu_data
  # atan2(2(wz + xy), 1 - 2(y^2 + z^2))
    pre_process_string: 'yaw = 180 / @pi * arctan2(2*(orientation_quat_w * orientation_quat_z + orientation_quat_x * orientation_quat_y), 1 - 2*(orientation_quat_y**2 + orientation_quat_z**2))'
    fields: 
    - yaw

xy_plot_buttons:
  gps_utm_raw:
  - topic: gps_odom
    fields:
    - [position_x, position_y]

  gps_utm_adj:
  - topic: gps_odom
    pre_process_string: 
    - x_adj = position_x - position_x.mean()
    - y_adj = position_y - position_y.mean()
    fields:
    - [x_adj, y_adj]
